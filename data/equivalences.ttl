@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix schema: <http://schema.org/> .
@prefix cc: <http://creativecommons.org/ns#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix dce: <http://purl.org/dc/elements/1.1/> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix pav: <http://purl.org/pav/> .
@prefix mod: <https://w3id.org/mod#> .
@prefix fabio: <http://purl.org/spar/fabio/> .
@prefix dcmitype: <http://purl.org/dc/dcmitype/> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix adms: <http://www.w3.org/ns/adms#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix dbpo: <http://dbpedia.org/ontology/> .
@prefix xhv: <http://www.w3.org/1999/xhtml/vocab#> .
@prefix sto: <https://w3id.org/i40/sto#> .
@prefix nie: <http://www.semanticdesktop.org/ontologies/2007/01/19/nie#> .
@prefix hydra: <http://www.w3.org/ns/hydra/core#> .
@prefix : <https://wimmics.github.io/voidmatic/#> .

<> rdfs:label "Description file of the equivalences used in Metadatamatic" ;
    rdfs:comment "This file was created in the absence of an usable SPARQL enfine to be used in Metadatamatic. When possible, it should be replaced by a collection of SPARQL queries. The 'equiv' vocabulary was created for use in this file only and should not be used elsewhere." ;
    pav:derivedFrom <https://raw.githubusercontent.com/FAIR-IMPACT/MOD/master/mod-v2.0_profile.ttl> , 
        <https://github.com/Jendersen/KG_accountability/tree/main/equivalencesRules> , 
        <https://github.com/Wimmics/IndeGx/tree/main/post/equivalences> .


######### Equivalences #########

:Dataset equiv:class schema:Dataset ,
        dcmitype:Dataset ,
        void:Dataset ,
        dcat:Dataset ,
        sd:Dataset .

:identifier equiv:property dct:identifier ,
        skos:notation ,
        adms:identifier ,
        schema:identifier .

mod:URI equiv:impliedProperty :identifier .

:title equiv:property dct:title ,
        dce:title ,
        schema:name ,
        foaf:name ,
        rdfs:label ,
        skos:prefLabel ,
        cc:attributionName .

:description equiv:property dct:description ,
        dce:description ,
        schema:description ,
        owl:comment ,
        rdf:comment ,
        skos:note .

:creator equiv:property dct:creator ,
        schema:creator ,
        schema:author ,
        foaf:maker ,
        dce:creator ,
        pav:authoredBy ,
        pav:createdBy ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Create
            ] ;
            equiv:predicate prov:wasAssociatedWith ;
            equiv:object equiv:targetObject
        ]
    ] .

:contributor equiv:property schema:editor ,
        schema:contributor ,
        dct:contributor ,
        dce:contributor ,
        pav:contributedBy ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Contribute ,
                    prov:Modify
            ] ;
            equiv:predicate prov:wasAssociatedWith ;
            equiv:object equiv:targetObject
        ]
    ] .

:publicationDate equiv:property dct:issued ,
        dct:available ,
        schema:datePublished ,
        schema:sdDatePublished ,
        pav:authoredOn ,
        pav:createdOn ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Publish
            ] ;
            equiv:predicate prov:endedAtTime ;
            equiv:object equiv:targetObject
        ]
    ] .

:publisher equiv:property dct:publisher ,
        dce:publisher ,
        schema:publisher ,
        schema:sdPublisher ,
        pav:providedBy ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Publish
            ] ;
            equiv:predicate prov:wasAssociatedWith ;
            equiv:object equiv:targetObject
        ]
    ] .

:creationDate equiv:property schema:dateCreated , 
        dct:created ,
        pav:createdOn ,
        prov:generatedAtTime ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Create
            ] ;
            equiv:predicate prov:endedAtTime ;
            equiv:object equiv:targetObject
        ]
    ] .

:creationLocation equiv:property schema:locationCreated ,
        pav:createdAt ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Create
            ] ;
            equiv:predicate prov:atLocation ;
            equiv:object equiv:targetObject
        ]
    ] .

:creationMethod equiv:property pav:createdWith ,
        pav:retrievedBy ,
        pav:importedBy ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
            equiv:subject [
                rdf:type prov:Create
            ] ;
            equiv:predicate prov:wasAssociatedWith ;
            equiv:object equiv:targetObject
        ]
    ] .

:modificationDate equiv:property schema:dateModified ,
        dct:modified ,
        pav:lastUpdateOn ,
        pav:contributedOn ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
                equiv:subject [
                    rdf:type prov:Modify
                ] ;
                equiv:predicate prov:endedAtTime ;
                equiv:object equiv:targetObject
            ]
        ] ,
        [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:wasGeneratedBy ;
        equiv:object [ 
                equiv:subject [
                    rdf:type prov:Modify
                ] ;
                equiv:predicate prov:startedAtTime ;
                equiv:object equiv:targetObject
            ]
        ] .

:endAvailability equiv:property schema:expires ,
        prov:invalidatedAtTime .

:endValidity equiv:property dcterms:valid ,
        schema:expires .

:vocabulary equiv:property void:vocabulary ,
        dct:conformsTo .

:theme equiv:property dcat:theme ,
        schema:about ,
        dct:subject ,
        foaf:topic ,
        foaf:primaryTopic ,
        skos:subject .

:keyword equiv:property schema:keywords ,
        dcat:keyword .

:metaGraph equiv:property schema:image ,
        foaf:depiction .

:sparqlEndpoint equiv:property void:sparqlEndpoint ,
        schema:contentURL .

:serviceSparqlEndpoint equiv:property dcat:endpointURL ,
        sd:endpoint .

:distribution equiv:property dcat:distribution ,
        schema:distribution .

:dump equiv:property void:dataDump ;
    equiv:pattern [
        equiv:subject equiv:targetSubject ;
        equiv:predicate dcat:distribution ;
        equiv:object [
            equiv:subject [] ;
            equiv:predicate dcat:downloadURL ;
            equiv:object equiv:targetObject
        ]
    ] , [
        equiv:subject equiv:targetSubject ;
        equiv:predicate schema:distribution ;
        equiv:object [
            equiv:subject [] ;
            equiv:predicate schema:contentUrl ;
            equiv:object equiv:targetObject
        ]
    ] .

:RESTAPI equiv:property schema:mainEntityOfPage ,
        fabio:ApplicationProgrammingInterface .

:format equiv:property dce:format ,
        dcterms:format , 
        schema:encodingFormat .

:version equiv:property dcat:version ,
        pav:version ,
        dct:hasVersion ,
        pav:hasCurrentVersion ,
        schema:version .

:versionNotes equiv:property adms:versionNotes ,
        owl:versionInfo .

:otherVersion equiv:property dct:isVersionOf ,
        pav:previousVersion ,
        owl:priorVersion .

:language equiv:property dct:language ,
        dce:language ,
        schema:inLanguage .

:identifier equiv:property schema:identifier ,
        dce:identifier ,
        dct:identifier ,
        adms:identifier .

:alternativeTitle equiv:property dct:alternative ,
        schema:alternateName ,
        skos:altLabel .

:acronym equiv:property schema:termCode ,
        <http://qudt.org/schema/qudt/acronym> .

:homepage equiv:property foaf:homepage ,
        schema:url ,
        dcat:landingPage .

:otherPages equiv:property schema:relatedLink ,
        rdfs:seeAlso .

:publicationReferences equiv:property schema:publication ,
        dct:references .

:linkedresources equiv:property dct:relation ,
        void:target .

:example equiv:property void:exampleResource ,
        schema:workExample ,
        skos:example .

:license equiv:property schema:license ,
        dct:license ,
        doap:license ,
        dbpo:license ,
        cc:license ,
        xhv:license ,
        sto:license ,
        nie:license .

:qualityAnnotation equiv:property schema:review , 
        dqv:hasQualityAnnotation .

:accessStatement equiv:property dce:rights , 
        dct:rights , 
        dct:accessRights .

:source equiv:property schema:isBasedOn ,
        dct:source ,
        dce:source ,
        dct:provenance ,
        prov:hadPrimarySource ,
        prov:wasDerivedFrom ,
        pav:derivedFrom ,
        pav:importedFrom ,
        pav:retrievedFrom .

:spatial equiv:property schema:spatialCoverage ,
        dct:spatial .

:temporal equiv:property schema:temporalCoverage ,
        dct:temporal .

###### Equivalences ontology ######

equiv: rdf:type owl:Ontology ;
    dct:title "Equivalences used in Metadatamatic" ;
    dct:description "This ontology is used to describe the equivalences used in Metadatamatic. It is not intended to be used elsewhere." ;
    vann:preferredNamespacePrefix "equiv" ;
    vann:preferredNamespaceUri "https://wimmics.github.io/voidmatic/equiv#" .

equiv:class a owl:ObjectProperty ;
    rdfs:label "Class equivalence" ;
    rdfs:comment "This property is used to describe the equivalence with a class." ;
    rdfs:domain equiv:Equivalence ;
    rdfs:range owl:Class .

equiv:property a rdfs:Property ;
    rdfs:label "Property equivalence" ;
    rdfs:comment "This property is used to describe the equivalence with a property." ;
    rdfs:domain equiv:Equivalence ;
    rdfs:range rdfs:Property .

equiv:pattern a owl:ObjectProperty ;
    rdfs:label "Pattern equivalence" ;
    rdfs:comment "This property is used to describe the equivalence with a pattern." ;
    rdfs:domain equiv:Equivalence ;
    rdfs:range equiv:TriplePattern .

equiv:subject a owl:ObjectProperty ;
    rdfs:label "Subject" ;
    rdfs:comment "This property is used to describe the subject of an equivalence pattern." ;
    rdfs:domain equiv:TriplePattern ;
    rdfs:range equiv:Equivalence .

equiv:predicate a owl:ObjectProperty ;
    rdfs:label "Predicate" ;
    rdfs:comment "This property is used to describe the predicate of an equivalence pattern." ;
    rdfs:domain equiv:TriplePattern ;
    rdfs:range equiv:Equivalence .

equiv:object a owl:ObjectProperty ;
    rdfs:label "Object" ;
    rdfs:comment "This property is used to describe the object of an equivalence pattern." ;
    rdfs:domain equiv:TriplePattern ;
    rdfs:range equiv:Equivalence .

equiv:constraint a owl:ObjectProperty ;
    rdfs:label "Constraint" ;
    rdfs:comment "This property is used to describe the constraint of an equivalence pattern." ;
    rdfs:domain equiv:TriplePattern ;
    rdfs:range equiv:Constraint .

equiv:Equivalence a owl:Class ;
    rdfs:label "Equivalence" ;
    rdfs:comment "This class is used to describe an equivalence between classes, properties or pattern." .

equiv:TriplePattern a owl:Class ;
    rdfs:subClassOf equiv:Equivalence ;
    rdfs:label "Pattern" ;
    rdfs:comment "This class is used to describe a pattern of equivalence." .

equiv:Constraint a owl:Class ;
    rdfs:subClassOf equiv:Equivalence ;
    rdfs:label "Constraint" ;
    rdfs:comment "This class is used to describe a constraint of a pattern." .

equiv:isLiteral a equiv:Constraint ;
    rdfs:label "Literal constraint" ;
    rdfs:comment "This constraint says that the resource designated by this pattern must be a literal." .

equiv:isIri a equiv:Constraint ;
    rdfs:label "IRI constraint" ;
    rdfs:comment "This constraint says that the resource designated by this pattern must be an IRI." .

equiv:isBlank a equiv:Constraint ;
    rdfs:label "Blank node constraint" ;
    rdfs:comment "This constraint says that the resource designated by this pattern must be a blank node." .

equiv:targetSubject a equiv:Constraint ;
    rdfs:label "Target subject constraint" ;
    rdfs:comment "This constraint says that the subject of the triple pattern must be the subject of any equivalent property." .

equiv:targetObject a equiv:Constraint ;
    rdfs:label "Target object constraint" ;
    rdfs:comment "This constraint says that the object of the triple pattern must be the object of any equivalent property." .

equiv:or a owl:ObjectProperty ;
    rdfs:label "Disjonction constraint" ;
    rdfs:comment "This constraint says that it is satisfied if any of the constraint in object are satisfied." ;
    rdfs:domain equiv:Equivalence ;
    rdfs:range rdfs:List .

equiv:impliedProperty a owl:ObjectProperty ;
    rdfs:label "Implication of a property or a class" ;
    rdfs:comment "This defines that the subject of a property must be the subject of the given property, but the properties are not equivalent. This is to be used for properties from different ontologies that do not have any direct of indirect  equivalence of hierarchical relation." ;
    rdfs:domain rdfs:Property ;
    rdfs:range equiv:Equivalence .

equiv:impliedClass a owl:ObjectProperty ;
    rdfs:label "Implication of a class" ;
    rdfs:comment "This defines that the instance of a class must be instance of the given classes, but the classes are not equivalent. This is to be used for classes from different ontologies that do not have any direct of indirect equivalence of hierarchical relation." ;
    rdfs:domain owl:Class ;
    rdfs:range owl:Class .